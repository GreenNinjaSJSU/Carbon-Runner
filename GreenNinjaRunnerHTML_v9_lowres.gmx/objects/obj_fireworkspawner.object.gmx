<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This object randomely generates the platforms the player jumps on
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create platforms, reset alarm

ypos = room_height/2 + irandom(3) * sprite_get_height(spr_platform)

blocks = irandom(10) + 5
xpos = 0
w = sprite_get_width(spr_platform)

yoff = 0//choose(0,-128)


repeat(irandom(3))
    {
    //xoff = irandom(blocks/2) * sprite_get_width(spr_platform)*2
    instance_create(room_width+sprite_get_width(spr_platform)/2 + xpos + blocks * w / 2 - 256 ,ypos - 128 + yoff,choose(obj_firework))
    yoff -= 256
    //instance_create(room_width+sprite_get_width(spr_platform)/2 + xpos + blocks * w / 2 ,room_height-sprite_get_height(spr_platform/2),obj_platformmeat)
    }


repeat(blocks)
    {
    yoff = 0
    instance_create(room_width+sprite_get_width(spr_platform)/2 + xpos,ypos,obj_firework)
    repeat(4)
        {
        yoff += sprite_get_height(spr_platform)
        instance_create(room_width+sprite_get_width(spr_platform)/2 + xpos,ypos+yoff,obj_firework)
        }
    xpos += sprite_get_width(spr_platform)
    }

alarm[0] = 7.2 * blocks / global.level_speed //7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !collision_line(room_width,0,room_width,room_height,obj_platform,0,1)
    {
    if alarm[0] &gt; 10
    alarm[0] -= 5
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
