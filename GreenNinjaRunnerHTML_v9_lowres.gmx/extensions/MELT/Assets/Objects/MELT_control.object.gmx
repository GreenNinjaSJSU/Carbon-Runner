<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scroll_sl = -1
scroll_pos = 0
code_pos = 0

show_code = 0
get_code = 0
code_str = ""
tabval = -1
checkval = 0
melted = 0

copying = -1
selected = -1

window_set_caption("Interface Editor")

resizing = -1
num_deleted = 0
moving = -1
waiting_for = -1
waiting = -1
global.tab = -1
global.GUIs = 0

global.GUI_x[0] = 0
global.GUI_y[0] = 0
global.GUI_w[0] = 0
global.GUI_h[0] = 0
global.GUI_type[0] = ""
global.GUI_text[0] = ""

global.GUI_devmode = 0

dev_pos = 0

placing = ""

placing_w = 64
placing_h = 48

sln = -1

MELT_scr_cursor_alarm_init()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MELT_scr_text_cursor_alarm()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clipboard_set_text(code_str)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LIQUIDIZE
melted = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.GUI_devmode
    {
    dev_pos = MELT_adjust(dev_pos , 1)
    }
else
    {
    dev_pos = MELT_adjust(dev_pos , 0)
    }
    
if show_code
    {
    code_pos = MELT_adjust(code_pos , 1)
    }
else
    {
    code_pos = MELT_adjust(code_pos , 0)
    }

if keyboard_check(vk_control)
if keyboard_check_pressed(ord("Q"))
    {
    if !global.GUI_devmode
    if !melted
        {
        alarm[0] = 1
        melted = 1
        }
    global.GUI_devmode = !global.GUI_devmode
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(1)
    selected = -1

draw_set_font(MELT_font_default)    
if waiting &gt; -1
    {
    if instance_exists(waiting)
        {
        answer = waiting.answer
        }
    else
        {
        waiting = -1
        waiting_for = -1
        }
    }

MELT_scr_shorter_view_names()

draw_set_color(c_black)
draw_rectangle(vx , vy , vx + vw , vy + dev_pos * 68 , 0)

draw_rectangle(vx + vw - dev_pos * code_pos * 320 , vy , vx + vw , vy + vh, 0)
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_set_valign(fa_top)
scr_paragraph(code_str,vx + vw - dev_pos * code_pos * 320 + 8 , vy + 64 + 8,256,c_white)
//draw_text(vx + vw - dev_pos * code_pos * 320 + 8 , vy + 64 + 8, code_str)

MELT_scr_topbar()

/*
if MELT_drawButton(vx+vw-w/2 - 128,vy-32+70*dev_pos + 8,128,64-24,"MELT")
    {
    alarm[0] = 2
    }
*/

if show_code
    tstr = "HIDE CODE"
else
    tstr = "SHOW CODE"

if MELT_drawButton(vx+vw-w/2-w,vy-32+70*dev_pos + 8,128,64-24,tstr)
    {
    show_code = !show_code
    }
if MELT_drawButton(vx+vw-w/2-w*2.5,vy-32+70*dev_pos + 8,128,64-24,"COPY CODE")
    {
    get_code = 1
    code_str = ""
    alarm[1] = 1
    }
if MELT_drawButton(vx+vw-w/2,vy-32+70*dev_pos + 8,64,64-24,"close")
    {
    global.GUI_devmode = 0
    }
  
/*
if MELT_scr_checkbox(spr_checkbox,200,300,32,32,checkval,"item is checked")
    checkval = !checkval
  
MELT_button(spr_button,200,200,200,20,"MELT ME",-1,0,"")

MELT_button(0 , 424 , 
                    160 , 240,96, 'MELT ME', -1 , 0 , '')

                    MELT_button_frozen(0 , 200 , 
                    200 , 200,20, 'MELT ME', -1 , 0 , '')
MELT_button(0 , 328 , 
                    384 , 240,96, 'MELT ME', -1 , 0 , '')
MELT_button(0 , 584 , 
                    384 , 240,96, 'MELT ME', -1 , 0 , '')
*/
                    
draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_color(c_white)
draw_text(8,8-32+32*dev_pos,"In-Game Interface Editor")

MELT_scr_draw_interface()
        
MELT_placing()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
